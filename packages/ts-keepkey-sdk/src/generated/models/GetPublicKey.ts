/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-desktop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.85
 * Contact: bithighlander@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BTCInputScriptType } from './BTCInputScriptType';
import {
    BTCInputScriptTypeFromJSON,
    BTCInputScriptTypeFromJSONTyped,
    BTCInputScriptTypeToJSON,
} from './BTCInputScriptType';

/**
 * 
 * @export
 * @interface GetPublicKey
 */
export interface GetPublicKey {
    /**
     * 
     * @type {Array<number>}
     * @memberof GetPublicKey
     */
    addressNList: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof GetPublicKey
     */
    showDisplay?: boolean;
    /**
     * 
     * @type {BTCInputScriptType}
     * @memberof GetPublicKey
     */
    scriptType?: BTCInputScriptType;
    /**
     * 
     * @type {string}
     * @memberof GetPublicKey
     */
    curve?: string;
    /**
     * 
     * @type {string}
     * @memberof GetPublicKey
     */
    coin: string;
    /**
     * 
     * @type {string}
     * @memberof GetPublicKey
     */
    symbol?: string;
}

/**
 * Check if a given object implements the GetPublicKey interface.
 */
export function instanceOfGetPublicKey(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "addressNList" in value;
    isInstance = isInstance && "coin" in value;

    return isInstance;
}

export function GetPublicKeyFromJSON(json: any): GetPublicKey {
    return GetPublicKeyFromJSONTyped(json, false);
}

export function GetPublicKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPublicKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addressNList': json['addressNList'],
        'showDisplay': !exists(json, 'showDisplay') ? undefined : json['showDisplay'],
        'scriptType': !exists(json, 'scriptType') ? undefined : BTCInputScriptTypeFromJSON(json['scriptType']),
        'curve': !exists(json, 'curve') ? undefined : json['curve'],
        'coin': json['coin'],
        'symbol': !exists(json, 'symbol') ? undefined : json['symbol'],
    };
}

export function GetPublicKeyToJSON(value?: GetPublicKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addressNList': value.addressNList,
        'showDisplay': value.showDisplay,
        'scriptType': BTCInputScriptTypeToJSON(value.scriptType),
        'curve': value.curve,
        'coin': value.coin,
        'symbol': value.symbol,
    };
}

