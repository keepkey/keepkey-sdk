/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-desktop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.85
 * Contact: bithighlander@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelError } from './ModelError';
import {
    ModelErrorFromJSON,
    ModelErrorFromJSONTyped,
    ModelErrorToJSON,
} from './ModelError';
import type { Write } from './Write';
import {
    WriteFromJSON,
    WriteFromJSONTyped,
    WriteToJSON,
} from './Write';

/**
 * 
 * @export
 * @interface WriteDevice200Response
 */
export interface WriteDevice200Response {
    /**
     * 
     * @type {string}
     * @memberof WriteDevice200Response
     */
    output: string;
    /**
     * 
     * @type {boolean}
     * @memberof WriteDevice200Response
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof WriteDevice200Response
     */
    reason: string;
}

/**
 * Check if a given object implements the WriteDevice200Response interface.
 */
export function instanceOfWriteDevice200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "output" in value;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "reason" in value;

    return isInstance;
}

export function WriteDevice200ResponseFromJSON(json: any): WriteDevice200Response {
    return WriteDevice200ResponseFromJSONTyped(json, false);
}

export function WriteDevice200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WriteDevice200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'output': json['output'],
        'success': json['success'],
        'reason': json['reason'],
    };
}

export function WriteDevice200ResponseToJSON(value?: WriteDevice200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'output': value.output,
        'success': value.success,
        'reason': value.reason,
    };
}

