/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-desktop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.79
 * Contact: bithighlander@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ModelError } from './ModelError';
import {
    ModelErrorFromJSON,
    ModelErrorFromJSONTyped,
    ModelErrorToJSON,
} from './ModelError';
import type { Read } from './Read';
import {
    ReadFromJSON,
    ReadFromJSONTyped,
    ReadToJSON,
} from './Read';

/**
 * 
 * @export
 * @interface ReadDevice200Response
 */
export interface ReadDevice200Response {
    /**
     * 
     * @type {string}
     * @memberof ReadDevice200Response
     */
    data: string;
    /**
     * 
     * @type {boolean}
     * @memberof ReadDevice200Response
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReadDevice200Response
     */
    reason: string;
}

/**
 * Check if a given object implements the ReadDevice200Response interface.
 */
export function instanceOfReadDevice200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "data" in value;
    isInstance = isInstance && "success" in value;
    isInstance = isInstance && "reason" in value;

    return isInstance;
}

export function ReadDevice200ResponseFromJSON(json: any): ReadDevice200Response {
    return ReadDevice200ResponseFromJSONTyped(json, false);
}

export function ReadDevice200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReadDevice200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': json['data'],
        'success': json['success'],
        'reason': json['reason'],
    };
}

export function ReadDevice200ResponseToJSON(value?: ReadDevice200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'success': value.success,
        'reason': value.reason,
    };
}

