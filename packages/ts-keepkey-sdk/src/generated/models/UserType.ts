/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-desktop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.85
 * Contact: bithighlander@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UserTypeAccountsInner } from './UserTypeAccountsInner';
import {
    UserTypeAccountsInnerFromJSON,
    UserTypeAccountsInnerFromJSONTyped,
    UserTypeAccountsInnerToJSON,
} from './UserTypeAccountsInner';

/**
 * 
 * @export
 * @interface UserType
 */
export interface UserType {
    /**
     * 
     * @type {Array<any>}
     * @memberof UserType
     */
    balances: Array<any>;
    /**
     * 
     * @type {Array<UserTypeAccountsInner>}
     * @memberof UserType
     */
    accounts: Array<UserTypeAccountsInner>;
    /**
     * 
     * @type {boolean}
     * @memberof UserType
     */
    online: boolean;
}

/**
 * Check if a given object implements the UserType interface.
 */
export function instanceOfUserType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "balances" in value;
    isInstance = isInstance && "accounts" in value;
    isInstance = isInstance && "online" in value;

    return isInstance;
}

export function UserTypeFromJSON(json: any): UserType {
    return UserTypeFromJSONTyped(json, false);
}

export function UserTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'balances': json['balances'],
        'accounts': ((json['accounts'] as Array<any>).map(UserTypeAccountsInnerFromJSON)),
        'online': json['online'],
    };
}

export function UserTypeToJSON(value?: UserType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'balances': value.balances,
        'accounts': ((value.accounts as Array<any>).map(UserTypeAccountsInnerToJSON)),
        'online': value.online,
    };
}

