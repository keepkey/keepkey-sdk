/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-desktop
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.14
 * Contact: bithighlander@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ReadDevice200Response,
  WriteBody,
  WriteDevice200Response,
} from '../models';
import {
    ReadDevice200ResponseFromJSON,
    ReadDevice200ResponseToJSON,
    WriteBodyFromJSON,
    WriteBodyToJSON,
    WriteDevice200ResponseFromJSON,
    WriteDevice200ResponseToJSON,
} from '../models';

export interface WriteDeviceRequest {
    writeBody: WriteBody;
}

/**
 * 
 */
export class RawKeepKeyDeviceI0EndpointsApi extends runtime.BaseAPI {

    /**
     */
    async readDeviceRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ReadDevice200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/exchange/device`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ReadDevice200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async readDevice(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ReadDevice200Response> {
        const response = await this.readDeviceRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async writeDeviceRaw(requestParameters: WriteDeviceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WriteDevice200Response>> {
        if (requestParameters.writeBody === null || requestParameters.writeBody === undefined) {
            throw new runtime.RequiredError('writeBody','Required parameter requestParameters.writeBody was null or undefined when calling writeDevice.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/exchange/device`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: WriteBodyToJSON(requestParameters.writeBody),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WriteDevice200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async writeDevice(requestParameters: WriteDeviceRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WriteDevice200Response> {
        const response = await this.writeDeviceRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
